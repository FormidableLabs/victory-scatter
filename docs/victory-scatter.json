{"description":"","props":{"animate":{"type":{"name":"object"},"required":false,"description":"The animate prop specifies props for victory-animation to use. It this prop is\nnot given, the scatter plot will not tween between changing data / style props.\nLarge datasets might animate slowly due to the inherent limits of svg rendering.\n@examples {delay: 5, velocity: 0.02, onEnd: () => alert(\"woo!\")}"},"bubbleProperty":{"type":{"name":"string"},"required":false,"description":"The bubbleProperty prop indicates which property of the data object should be used\nto scale data points in a bubble chart"},"data":{"type":{"name":"arrayOf","value":{"name":"shape","value":{"x":{"name":"any","required":false},"y":{"name":"any","required":false}}}},"required":false,"description":"The data prop specifies the data to be plotted. Data should be in the form of an array\nof data points where each data point should be an object with x and y properties.\nOther properties may be added to the data point object, such as fill, size, and symbol.\nThese properties will be interpreted and applied to the individual lines\n@examples [{x: 1, y: 2, fill: \"red\"}, {x: 2, y: 3, label: \"foo\"}]"},"domain":{"type":{"name":"union","value":[{"name":"custom","raw":"Util.PropTypes.domain"},{"name":"shape","value":{"x":{"name":"custom","raw":"Util.PropTypes.domain","required":false},"y":{"name":"custom","raw":"Util.PropTypes.domain","required":false}}}]},"required":false,"description":"The domain prop describes the range of values your chart will include. This prop can be\ngiven as a array of the minimum and maximum expected values for your chart,\nor as an object that specifies separate arrays for x and y.\nIf this prop is not provided, a domain will be calculated from data, or other\navailable information.\n@examples [-1, 1], {x: [0, 100], y: [0, 1]}"},"height":{"type":{"name":"custom","raw":"Util.PropTypes.nonNegative"},"required":false,"description":"The height props specifies the height of the chart container element in pixels","defaultValue":{"value":"300","computed":false}},"labelComponent":{"type":{"name":"element"},"required":false,"description":"The labelComponent prop takes in an entire, HTML-complete label component\nwhich will be used to create labels for scatter to use"},"maxBubbleSize":{"type":{"name":"custom","raw":"Util.PropTypes.nonNegative"},"required":false,"description":"The maxBubbleSize prop sets an upper limit for scaling data points in a bubble chart"},"padding":{"type":{"name":"union","value":[{"name":"number"},{"name":"shape","value":{"top":{"name":"number","required":false},"bottom":{"name":"number","required":false},"left":{"name":"number","required":false},"right":{"name":"number","required":false}}}]},"required":false,"description":"The padding props specifies the amount of padding in number of pixels between\nthe edge of the chart and any rendered child components. This prop can be given\nas a number or as an object with padding specified for top, bottom, left\nand right.","defaultValue":{"value":"50","computed":false}},"samples":{"type":{"name":"custom","raw":"Util.PropTypes.nonNegative"},"required":false,"description":"The samples prop specifies how many individual points to plot when plotting\ny as a function of x. Samples is ignored if x props are provided instead.","defaultValue":{"value":"50","computed":false}},"scale":{"type":{"name":"union","value":[{"name":"custom","raw":"Util.PropTypes.scale"},{"name":"shape","value":{"x":{"name":"custom","raw":"Util.PropTypes.scale","required":false},"y":{"name":"custom","raw":"Util.PropTypes.scale","required":false}}}]},"required":false,"description":"The scale prop determines which scales your chart should use. This prop can be\ngiven as a function, or as an object that specifies separate functions for x and y.\n@exampes d3.time.scale(), {x: d3.scale.linear(), y:tickd3.scale.log()}","defaultValue":{"value":"d3.scale.linear()","computed":true}},"showLabels":{"type":{"name":"bool"},"required":false,"description":"The showLabels prop determines whether to show any labels associated with a data point.\nLarge datasets might animate slowly due to the inherent limits of svg rendering.\nIf animations are running slowly, try setting this prop to false to cut down on\nthe number of svg nodes","defaultValue":{"value":"true","computed":false}},"size":{"type":{"name":"custom","raw":"Util.PropTypes.nonNegative"},"required":false,"description":"The size prop determines how to scale each data point","defaultValue":{"value":"3","computed":false}},"standalone":{"type":{"name":"bool"},"required":false,"description":"The standalone prop determines whether the component will render a standalone svg\nor a <g> tag that will be included in an external svg. Set standalone to false to\ncompose VictoryScatter with other components within an enclosing <svg> tag.","defaultValue":{"value":"true","computed":false}},"style":{"type":{"name":"shape","value":{"parent":{"name":"object","required":false},"data":{"name":"object","required":false},"labels":{"name":"object","required":false}}},"required":false,"description":"The style prop specifies styles for your scatter plot. VictoryScatter relies on Radium,\nso valid Radium style objects should work for this prop. Height, width, and\npadding should be specified via the height, width, and padding props, as they\nare used to calculate the alignment of components within chart.\n@examples {parent: {margin: 50}, data: {fill: \"red\"}, labels: {padding: 20}}"},"symbol":{"type":{"name":"enum","value":[{"value":"\"circle\"","computed":false},{"value":"\"diamond\"","computed":false},{"value":"\"plus\"","computed":false},{"value":"\"square\"","computed":false},{"value":"\"star\"","computed":false},{"value":"\"triangleDown\"","computed":false},{"value":"\"triangleUp\"","computed":false}]},"required":false,"description":"The symbol prop determines which symbol should be drawn to represent data points.","defaultValue":{"value":"\"circle\"","computed":false}},"width":{"type":{"name":"custom","raw":"Util.PropTypes.nonNegative"},"required":false,"description":"The width props specifies the width of the chart container element in pixels","defaultValue":{"value":"450","computed":false}},"x":{"type":{"name":"custom","raw":"Util.PropTypes.homogeneousArray"},"required":false,"description":"The x prop provides another way to supply data for scatter to plot. This prop can be given\nas an array of values, and it will be plotted against whatever y prop is provided. If no\nprops are provided for y, the values in x will be plotted as the identity function.\n@examples [1, 2, 3]"},"y":{"type":{"name":"union","value":[{"name":"array"},{"name":"func"}]},"required":false,"description":"The y prop provides another way to supply data for scatter to plot. This prop can be given\nas a function of x, or an array of values. If x props are given, they will be used\nin plotting (x, y) data points. If x props are not provided, a set of x values\nevenly spaced across the x domain will be calculated, and used for plotting data points.\n@examples (x) => Math.sin(x), [1, 2, 3]","defaultValue":{"value":"(x) => x","computed":false}}}}